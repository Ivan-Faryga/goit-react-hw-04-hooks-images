{"version":3,"sources":["components/Button/Button.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/SearchBar/SearchBar.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","services/apiServise.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ImageGalleryItem","image","onClick","className","src","webformatURL","alt","largeImageURL","ImageGallery","images","map","id","SearchBar","onSubmit","reset","useState","query","setQuery","e","preventDefault","trim","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","type","name","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","Loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","onCloseModal","children","useEffect","window","addEventListener","handleCloseModalbyEscBtn","removeEventListener","code","createPortal","target","Button","addImgs","s","loadMoreBtn","axios","defaults","baseURL","App","page","setPage","setImages","loader","setLoader","showModal","setShowModal","modalImg","setModalImg","downloadImages","scrollTo","top","documentElement","scrollHeight","behavior","toggleLoader","get","then","resp","data","hits","fetchPictures","response","length","error","catch","setState","finally","toggleModal","searchData","dataset","img","btnName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c04d9657.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadMoreBtn\":\"Button_loadMoreBtn__1yFwD\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={image.webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={onClick}\r\n        data-img={image.largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  // console.log(images);\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem image={image} key={image.id} onClick={onClick} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  // image: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function SearchBar({ onSubmit, reset }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleChangeQuery = (e) => {\r\n    // const { name, value } = e.currentTarget;\r\n    // this.setState({\r\n    //   [name]: value,\r\n    // });\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!query.trim())\r\n      return toast.warn(\"Please enter your request\", {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"colored\",\r\n      });\r\n    onSubmit(query);\r\n    setQuery(\"\");\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          name=\"query\"\r\n          value={query}\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChangeQuery}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import NewLoader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <NewLoader\r\n      type=\"Watch\"\r\n      color=\"#3f51b5\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ onCloseModal, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleCloseModalbyEscBtn);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleCloseModalbyEscBtn);\r\n    };\r\n  });\r\n\r\n  const handleCloseModalbyEscBtn = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\n\r\nfunction Button({ addImgs }) {\r\n  return (\r\n    <button onClick={addImgs} className={s.loadMoreBtn}>\r\n      Load more..\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  addImgs: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\naxios.defaults.baseURL = \"https://pixabay.com/api\";\r\nconst API_KEY = \"22450020-f32da86f0216f1b7b94b605ba\";\r\n\r\nexport function fetchPictures(query, page) {\r\n  return axios\r\n    .get(\r\n      `/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\r\n    )\r\n    .then((resp) => resp.data.hits);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Loader from \"./components/Loader/Loader\";\nimport Modal from \"./components/Modal/Modal\";\nimport Button from \"./components/Button/Button\";\nimport { fetchPictures } from \"./services/apiServise\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// (\"idle\");\n// (\"pending\");\n// (\"resolved\");\n// (\"rejected\");\n\nexport default function App() {\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalImg, setModalImg] = useState(\"\");\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (query === \"\") {\n      return;\n    }\n    downloadImages();\n  }, [query]);\n\n  useEffect(() => {\n    if (page !== 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }, [page]);\n\n  const handleSubmit = (searchData) => {\n    setQuery(searchData);\n    setPage(1);\n  };\n\n  const downloadImages = (e) => {\n    toggleLoader();\n\n    fetchPictures(query, page)\n      .then((response) => {\n        if (response.length === 0) {\n          return toast.error(`no results for ${query}`, {\n            theme: \"colored\",\n            autoClose: 4000,\n          });\n        }\n        setImages([...images, ...response]);\n        setPage(page + 1);\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => toggleLoader());\n  };\n\n  const resetState = () => {\n    setImages(\"\");\n    setPage(1);\n  };\n\n  const handleChosenImg = (e) => {\n    e.preventDefault();\n    toggleModal();\n    // this.setState({ modalImg: e.target.dataset.img });\n    setModalImg(e.target.dataset.img);\n  };\n\n  const toggleLoader = () => {\n    setLoader(!loader);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchBar\n        query={query}\n        // handleChange={this.handleChangeQuery}\n        onSubmit={handleSubmit}\n        reset={resetState}\n      />\n      {!!images.length && (\n        <>\n          <ImageGallery images={images} onClick={handleChosenImg} />\n          <Button addImgs={downloadImages} btnName={\"Load more\"} />\n        </>\n      )}\n      {showModal && (\n        <Modal onCloseModal={toggleModal}>\n          <img src={modalImg} alt=\"\" />\n        </Modal>\n      )}\n      {loader && <Loader />}\n      <ToastContainer position=\"top-right\" autoClose={2500} theme=\"dark\" />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}